b2240-02:~/Desktop/CSC209/c3javier/a2$ valgrind mytest==11517== Memcheck, a memory error detector==11517== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.==11517== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info==11517== Command: mytest==11517== After initial call to mem_init()Allocated blocks:Free blocks:    [addr: 0x4051000, size: 262144]smalloc results:ptrs[0] = 0x4051000ptrs[1] = 0x4081d40ptrs[2] = 0x40907a0ptrs[3] = (nil)==11517== Conditional jump or move depends on uninitialised value(s)==11517==    at 0x4E7D409: vfprintf (vfprintf.c:1629)==11517==    by 0x4E85588: printf (printf.c:35)==11517==    by 0x4007FF: main (mytest.c:50)==11517== ptrs[4] = (nil)==11517== Use of uninitialised value of size 8==11517==    at 0x4E7A441: _itoa_word (_itoa.c:196)==11517==    by 0x4E7C4E7: vfprintf (vfprintf.c:1629)==11517==    by 0x4E85588: printf (printf.c:35)==11517==    by 0x4007FF: main (mytest.c:50)==11517== ==11517== Conditional jump or move depends on uninitialised value(s)==11517==    at 0x4E7A448: _itoa_word (_itoa.c:196)==11517==    by 0x4E7C4E7: vfprintf (vfprintf.c:1629)==11517==    by 0x4E85588: printf (printf.c:35)==11517==    by 0x4007FF: main (mytest.c:50)==11517== ==11517== Conditional jump or move depends on uninitialised value(s)==11517==    at 0x4E7C24B: vfprintf (vfprintf.c:1629)==11517==    by 0x4E85588: printf (printf.c:35)==11517==    by 0x4007FF: main (mytest.c:50)==11517== ==11517== Conditional jump or move depends on uninitialised value(s)==11517==    at 0x4E7C2C7: vfprintf (vfprintf.c:1629)==11517==    by 0x4E85588: printf (printf.c:35)==11517==    by 0x4007FF: main (mytest.c:50)==11517== ==11517== Conditional jump or move depends on uninitialised value(s)==11517==    at 0x4E7C332: vfprintf (vfprintf.c:1629)==11517==    by 0x4E85588: printf (printf.c:35)==11517==    by 0x4007FF: main (mytest.c:50)==11517== ptrs[5] = 0x400610ptrs[6] = 0x4090fd4Allocated blocks:    [addr: 0x40907a0, size: 2100]    [addr: 0x4081d40, size: 60000]    [addr: 0x4051000, size: 200000]Free blocks:    [addr: 0x4090fd4, size: 20]    [addr: 0x4090fe8, size: 24]Results of sfree on head in allocated_list (and then smallocing again):Expected = 0; Actual = 0Results of sfree on an address not in allocated_list:Expected = -1; Actual = -1Results of sfree on NULL:Expected = -1; Actual = -1Allocated blocks:    [addr: 0x40907a0, size: 2100]    [addr: 0x4081d40, size: 60000]    [addr: 0x4051000, size: 200000]Free blocks:    [addr: 0x4090fd4, size: 20]    [addr: 0x4090fe8, size: 24]smalloc-ing exactly 20 bytesptrs[3] = 0x4090fd4Freeing what we just smalloc-ed and smalloc-ing 21 bytesAllocated blocks:    [addr: 0x4090fe8, size: 21]    [addr: 0x40907a0, size: 2100]    [addr: 0x4081d40, size: 60000]    [addr: 0x4051000, size: 200000]Free blocks    [addr: 0x4090fd4, size: 20]    [addr: 0x4090ffd, size: 3]smallocing the remaining exactly 20 bytesAllocated blocks:    [addr: 0x4090fd4, size: 20]    [addr: 0x4090fe8, size: 21]    [addr: 0x40907a0, size: 2100]    [addr: 0x4081d40, size: 60000]    [addr: 0x4051000, size: 200000]Free blocks    [addr: 0x4090ffd, size: 3]smalloc results:ptrs[0] = 0x4051000ptrs[1] = 0x4081d40ptrs[2] = 0x40907a0ptrs[3] = 0x4090fd4ptrs[4] = 0x4090fe8==11517== Conditional jump or move depends on uninitialised value(s)==11517==    at 0x4E7D409: vfprintf (vfprintf.c:1629)==11517==    by 0x4E85588: printf (printf.c:35)==11517==    by 0x4009F4: main (mytest.c:98)==11517== ==11517== Use of uninitialised value of size 8==11517==    at 0x4E7A441: _itoa_word (_itoa.c:196)==11517==    by 0x4E7C4E7: vfprintf (vfprintf.c:1629)==11517==    by 0x4E85588: printf (printf.c:35)==11517==    by 0x4009F4: main (mytest.c:98)==11517== ==11517== Conditional jump or move depends on uninitialised value(s)==11517==    at 0x4E7A448: _itoa_word (_itoa.c:196)==11517==    by 0x4E7C4E7: vfprintf (vfprintf.c:1629)==11517==    by 0x4E85588: printf (printf.c:35)==11517==    by 0x4009F4: main (mytest.c:98)==11517== ==11517== Conditional jump or move depends on uninitialised value(s)==11517==    at 0x4E7C24B: vfprintf (vfprintf.c:1629)==11517==    by 0x4E85588: printf (printf.c:35)==11517==    by 0x4009F4: main (mytest.c:98)==11517== ==11517== Conditional jump or move depends on uninitialised value(s)==11517==    at 0x4E7C2C7: vfprintf (vfprintf.c:1629)==11517==    by 0x4E85588: printf (printf.c:35)==11517==    by 0x4009F4: main (mytest.c:98)==11517== ==11517== Conditional jump or move depends on uninitialised value(s)==11517==    at 0x4E7C332: vfprintf (vfprintf.c:1629)==11517==    by 0x4E85588: printf (printf.c:35)==11517==    by 0x4009F4: main (mytest.c:98)==11517== ptrs[5] = 0x400610ptrs[6] = 0x4090fd4==11517== Invalid read of size 8==11517==    at 0x400D0A: mem_clean (smalloc.c:93)==11517==    by 0x400A08: main (mytest.c:101)==11517==  Address 0x51f1050 is 16 bytes inside a block of size 24 free'd==11517==    at 0x4C2A82E: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)==11517==    by 0x400D02: mem_clean (smalloc.c:94)==11517==    by 0x400A08: main (mytest.c:101)==11517== ==11517== Invalid read of size 8==11517==    at 0x400D39: mem_clean (smalloc.c:96)==11517==    by 0x400A08: main (mytest.c:101)==11517==  Address 0x51f1470 is 16 bytes inside a block of size 24 free'd==11517==    at 0x4C2A82E: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)==11517==    by 0x400D31: mem_clean (smalloc.c:97)==11517==    by 0x400A08: main (mytest.c:101)==11517== Testing mem_cleanAllocated blocks:Free blocks:Results of trying to smalloc after mem_cleanptrs[5] = (nil)==11517== ==11517== HEAP SUMMARY:==11517==     in use at exit: 144 bytes in 6 blocks==11517==   total heap usage: 12 allocs, 6 frees, 288 bytes allocated==11517== ==11517== LEAK SUMMARY:==11517==    definitely lost: 96 bytes in 4 blocks==11517==    indirectly lost: 48 bytes in 2 blocks==11517==      possibly lost: 0 bytes in 0 blocks==11517==    still reachable: 0 bytes in 0 blocks==11517==         suppressed: 0 bytes in 0 blocks==11517== Rerun with --leak-check=full to see details of leaked memory==11517== ==11517== For counts of detected and suppressed errors, rerun with: -v==11517== Use --track-origins=yes to see where uninitialised values come from==11517== ERROR SUMMARY: 39 errors from 14 contexts (suppressed: 2 from 2)b2240-02:~/Desktop/CSC209/c3javier/a2$ valgrind simpletest==11530== Memcheck, a memory error detector==11530== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.==11530== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info==11530== Command: simpletest==11530== List of allocated blocks:    [addr: 0x405103c, size: 40]    [addr: 0x405101e, size: 30]    [addr: 0x405100a, size: 20]    [addr: 0x4051000, size: 10]List of free blocks:    [addr: 0x4051064, size: 262044]Contents of allocated memory:0x405103c: size = 40    0:  03 03 03 03 03 03 03 03   03 03 03 03 03 03 03 03    16:  03 03 03 03 03 03 03 03   03 03 03 03 03 03 03 03    32:  03 03 03 03 03 03 03 03 0x405101e: size = 30    0:  02 02 02 02 02 02 02 02   02 02 02 02 02 02 02 02    16:  02 02 02 02 02 02 02 02 0x405100a: size = 20    0:  01 01 01 01 01 01 01 01   01 01 01 01 01 01 01 01 0x4051000: size = 10    0:  00 00 00 00 00 00 00 00 freeing 0x405100a result = 0List of allocated blocks:    [addr: 0x405103c, size: 40]    [addr: 0x405101e, size: 30]    [addr: 0x4051000, size: 10]List of free blocks:    [addr: 0x405100a, size: 20]    [addr: 0x4051064, size: 262044]Contents of allocated memory:0x405103c: size = 40    0:  03 03 03 03 03 03 03 03   03 03 03 03 03 03 03 03    16:  03 03 03 03 03 03 03 03   03 03 03 03 03 03 03 03    32:  03 03 03 03 03 03 03 03 0x405101e: size = 30    0:  02 02 02 02 02 02 02 02   02 02 02 02 02 02 02 02    16:  02 02 02 02 02 02 02 02 0x4051000: size = 10    0:  00 00 00 00 00 00 00 00 ==11530== Invalid read of size 8==11530==    at 0x400AA6: mem_clean (smalloc.c:93)==11530==    by 0x400805: main (simpletest.c:45)==11530==  Address 0x51f1230 is 16 bytes inside a block of size 24 free'd==11530==    at 0x4C2A82E: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)==11530==    by 0x400A9E: mem_clean (smalloc.c:94)==11530==    by 0x400805: main (simpletest.c:45)==11530== ==11530== Invalid read of size 8==11530==    at 0x400AD5: mem_clean (smalloc.c:96)==11530==    by 0x400805: main (simpletest.c:45)==11530==  Address 0x51f11d0 is 16 bytes inside a block of size 24 free'd==11530==    at 0x4C2A82E: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)==11530==    by 0x400ACD: mem_clean (smalloc.c:97)==11530==    by 0x400805: main (simpletest.c:45)==11530== ==11530== ==11530== HEAP SUMMARY:==11530==     in use at exit: 24 bytes in 1 blocks==11530==   total heap usage: 6 allocs, 5 frees, 144 bytes allocated==11530== ==11530== LEAK SUMMARY:==11530==    definitely lost: 24 bytes in 1 blocks==11530==    indirectly lost: 0 bytes in 0 blocks==11530==      possibly lost: 0 bytes in 0 blocks==11530==    still reachable: 0 bytes in 0 blocks==11530==         suppressed: 0 bytes in 0 blocks==11530== Rerun with --leak-check=full to see details of leaked memory==11530== ==11530== For counts of detected and suppressed errors, rerun with: -v==11530== ERROR SUMMARY: 5 errors from 2 contexts (suppressed: 2 from 2)